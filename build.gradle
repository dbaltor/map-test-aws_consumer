
buildscript {
    repositories {
        mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.4.RELEASE")
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
		classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"		
    }
}

group = 'dbaltor'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

dependencyManagement {
  imports {
	  mavenBom 'software.amazon.awssdk:bom:2.0.0-preview-12'
  }
}

bootJar {
    baseName = 'heatmap-aws'
    version =  '1.0.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


dependencies {
	compile 'software.amazon.awssdk:sns'
	compile 'software.amazon.awssdk:sqs'
	testCompile group: 'junit', name: 'junit', version: '4.11'
	// compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-websocket")	
    compile("org.springframework.boot:spring-boot-starter-actuator")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

bootRun {
    if (project.hasProperty('args')) {
        args project.args.split(',')
    }
}

docker {
    dependsOn build
    name "${project.group}/${bootJar.baseName}"
    files bootJar.archivePath
	copySpec.from("files").into(".")
	buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}